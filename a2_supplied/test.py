
    DEFAULT_STATS = (1, 100, 200, 200)
    def create_pokemon(name):
      return Pokemon(name, PokemonStats(DEFAULT_STATS), 'normal', moves=[])

    
    ash     = Trainer('Ash Ketchup')
    brock   = Trainer("Brock")
    battle  = Battle(ash, brock, True)
    tackle  = Attack('tackle', 'normal', 15, 100, 40, .95)
    ash.add_pokemon(create_pokemon("pikachu"))
    brock.add_pokemon(create_pokemon("geodude"))
    ash.add_pokemon(create_pokemon("geodude"))
    brock.add_pokemon(create_pokemon("pikachu"))
    ash._current_pokemon.learn_move(tackle)
    brock._current_pokemon.learn_move(tackle)
    print("Ash's current pokemon {} has {}.".format(ash._current_pokemon.get_name(), ash._current_pokemon.get_move_info()))

    action = Action()
    flee = Flee()
    switch = SwitchPokemon(1)
    print("get_turn:",battle.get_turn())
    print("queue_empty:", battle.is_action_queue_empty())
    print("is_over:" ,battle.is_over())

    battle.queue_action(Flee(), True)
    print("trainer_action_queued(True):", battle.trainer_has_action_queued(True))
    print("get_trainer(True):", battle.get_trainer(True))
    print("get_trainer(False):", battle.get_trainer(False))
    print("battle.is_ready:", battle.is_ready())
    battle.queue_action(Flee(), False)
    print("battle.is_action_queue_full:", battle.is_action_queue_full())
    print("battle.get_turn:", battle.get_turn())
    summary = battle.enact_turn()
    print("summary.get_messages:", summary.get_messages())
    print("battle.get_turn:", battle.get_turn())
    print("battle.is_ready:", battle.is_ready())
    print("battle.is_action_queue_full:", battle.is_action_queue_full())
    other_summary = battle.enact_turn()
    print("other_summary.get_messages:",other_summary.get_messages())
    print("battle.get_turn:",battle.get_turn())

    print("queue_empty:", battle.is_action_queue_empty())
    print("Ash's action:", battle._trainer_action)
    battle.queue_action(tackle, True)
    print("Ash's action:", battle._trainer_action)
    print("battle.get_turn:", battle.get_turn())
    print("battle.is_ready:", battle.is_ready())
    battle.queue_action(Flee(), False)
    print("Brock's action:", battle._enemy_action)

    print("battle.get_turn:", battle.get_turn())
    print("battle.is_ready:", battle.is_ready())
    print("battle_is_over:" ,battle.is_over())
    print("queue_empty:", battle.is_action_queue_empty())
    print("battle.is_action_queue_full:", battle.is_action_queue_full())
    print("Battle._trainer_action.get_priority:", battle._trainer_action.get_priority())
    print("Battle._enemy_action.get_priority:", battle._enemy_action.get_priority())
    print("battle.get_turn:", battle.get_turn())
    print("trainer_action_queued(True):", battle.trainer_has_action_queued(True))
    print("trainer_action_queued(False):", battle.trainer_has_action_queued(False))
    print("battle.is_ready:", battle.is_ready())
    print("Ash's action:", battle._trainer_action)
    print("Brock's action:", battle._enemy_action)
    summary = battle.enact_turn()
    print("summary.get_messages:", summary.get_messages())
    print("battle.get_turn:", battle.get_turn())
    print("trainer_action_queued(True):", battle.trainer_has_action_queued(True))
    print("trainer_action_queued(False):", battle.trainer_has_action_queued(False))
    print("Ash's action:", battle._trainer_action)
    print("Brock's action:", battle._enemy_action)
    summary = battle.enact_turn()
    print("Ash's action:", battle._trainer_action)
    print("Brock's action:", battle._enemy_action)
    print("other_summary.get_messages:",summary.get_messages())
    print("battle._enemy._current_pokemon.get_health():",battle._enemy._current_pokemon.get_health())
    print("battle._enemy._current_pokemon.get_max_health():",battle._enemy._current_pokemon.get_max_health())
    print("battle._player._current_pokemon.get_health:",battle._player._current_pokemon.get_health())
    print(battle._player._current_pokemon.get_move_info())
    print(battle._enemy._current_pokemon.get_move_info())

    print("\n\n=======================================round 3 =======================================")
    pokeball = Pokeball("Greatball", 1)
    battle._player.add_item(pokeball, 3)
    battle.queue_action(pokeball, True)
    battle.queue_action(tackle, False)

    print("Ash's action:", battle._trainer_action)
    print("Brock's action:", battle._enemy_action)
    print("battle.get_turn:", battle.get_turn())
    print("battle.is_ready:", battle.is_ready())
    summary = battle.enact_turn()
    print("summary.get_messages:", summary.get_messages())
    print("battle._player.get_inventory:",battle._player.get_inventory())
    print("Ash's action:", battle._trainer_action)
    print("Brock's action:", battle._enemy_action)
    print("battle.get_turn:", battle.get_turn())
    print("battle.is_ready:", battle.is_ready())
    summary = battle.enact_turn()
    print("summary.get_messages:", summary.get_messages())
    print("battle._player.get_inventory:",battle._player.get_inventory())

    print("\n\n=======================================round 4 =======================================")
    soup = Food("Good Soup", 69)
    battle._player.add_item(soup,5)
    battle.queue_action(soup, True)
    battle.queue_action(tackle, False)

    print("Ash's action:", battle._trainer_action)
    print("Brock's action:", battle._enemy_action)
    print("battle.get_turn:", battle.get_turn())
    print("battle.is_ready:", battle.is_ready())
    print("battle._player._current_pokemon.get_health:",battle._player._current_pokemon.get_health())
    summary = battle.enact_turn()
    print("summary.get_messages:", summary.get_messages())
    print("battle._player.get_inventory:",battle._player.get_inventory())
    print("battle._player._current_pokemon.get_health:",battle._player._current_pokemon.get_health())
    summary = battle.enact_turn()
    print("summary.get_messages:", summary.get_messages())
    print("battle._player.get_inventory:",battle._player.get_inventory())

    print("\n\n=======================================round 5 =======================================")
    modifier = (0.2, -50, 0, -50)
    meditate = Buff('meditate', 'psychic', 5, 80, modifier, 5)
    anti_meditate = Debuff('anti_meditate', 'psychic', 5, 80, modifier, 5)
    ash._current_pokemon.learn_move(anti_meditate)
    battle.queue_action(anti_meditate, True)
    battle.queue_action(tackle, False)
    print("battle._enemy._current_pokemon.get_stats:",battle._enemy._current_pokemon.get_stats())
    print("Ash's action:", battle._trainer_action)
    print("Brock's action:", battle._enemy_action)
    print("battle.get_turn:", battle.get_turn())
    print("battle.is_ready:", battle.is_ready())
    print("battle._player._current_pokemon.get_health:",battle._player._current_pokemon.get_health())
    summary = battle.enact_turn()
    print("summary.get_messages:", summary.get_messages())
    print(battle._player._current_pokemon.get_stats())
    print("battle._player._current_pokemon.get_health:",battle._player._current_pokemon.get_health())
    summary = battle.enact_turn()
    print("summary.get_messages:", summary.get_messages())
    print("battle._player._current_pokemon.get_health:",battle._player._current_pokemon.get_health())
    print("battle._enemy._current_pokemon.get_stats:",battle._enemy._current_pokemon.get_stats())
    print(flee,switch)
    print(ash._current_pokemon.get_move_info())
    print("battle.get_turn:", battle.get_turn())
    print("battle.is_ready:", battle.is_ready())
    print(anti_meditate in ash._current_pokemon._moves)